{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.Lightsail.GetDistributionMetricData
-- Copyright   : (c) 2013-2020 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Returns the data points of a specific metric for an Amazon Lightsail content delivery network (CDN) distribution.
--
--
-- Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.
module Network.AWS.Lightsail.GetDistributionMetricData
  ( -- * Creating a Request
    getDistributionMetricData,
    GetDistributionMetricData,

    -- * Request Lenses
    gdmdDistributionName,
    gdmdMetricName,
    gdmdStartTime,
    gdmdEndTime,
    gdmdPeriod,
    gdmdUnit,
    gdmdStatistics,

    -- * Destructuring the Response
    getDistributionMetricDataResponse,
    GetDistributionMetricDataResponse,

    -- * Response Lenses
    gdmdrsMetricName,
    gdmdrsMetricData,
    gdmdrsResponseStatus,
  )
where

import Network.AWS.Lens
import Network.AWS.Lightsail.Types
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'getDistributionMetricData' smart constructor.
data GetDistributionMetricData = GetDistributionMetricData'
  { _gdmdDistributionName ::
      !Text,
    _gdmdMetricName ::
      !DistributionMetricName,
    _gdmdStartTime :: !POSIX,
    _gdmdEndTime :: !POSIX,
    _gdmdPeriod :: !Nat,
    _gdmdUnit :: !MetricUnit,
    _gdmdStatistics :: ![MetricStatistic]
  }
  deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'GetDistributionMetricData' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'gdmdDistributionName' - The name of the distribution for which to get metric data. Use the @GetDistributions@ action to get a list of distribution names that you can specify.
--
-- * 'gdmdMetricName' - The metric for which you want to return information. Valid distribution metric names are listed below, along with the most useful @statistics@ to include in your request, and the published @unit@ value.     * __@Requests@ __ - The total number of viewer requests received by your Lightsail distribution, for all HTTP methods, and for both HTTP and HTTPS requests. @Statistics@ : The most useful statistic is @Sum@ . @Unit@ : The published unit is @None@ .     * __@BytesDownloaded@ __ - The number of bytes downloaded by viewers for GET, HEAD, and OPTIONS requests. @Statistics@ : The most useful statistic is @Sum@ . @Unit@ : The published unit is @None@ .     * __@BytesUploaded @ __ - The number of bytes uploaded to your origin by your Lightsail distribution, using POST and PUT requests. @Statistics@ : The most useful statistic is @Sum@ . @Unit@ : The published unit is @None@ .     * __@TotalErrorRate@ __ - The percentage of all viewer requests for which the response's HTTP status code was 4xx or 5xx. @Statistics@ : The most useful statistic is @Average@ . @Unit@ : The published unit is @Percent@ .     * __@4xxErrorRate@ __ - The percentage of all viewer requests for which the response's HTTP status cod was 4xx. In these cases, the client or client viewer may have made an error. For example, a status code of 404 (Not Found) means that the client requested an object that could not be found. @Statistics@ : The most useful statistic is @Average@ . @Unit@ : The published unit is @Percent@ .     * __@5xxErrorRate@ __ - The percentage of all viewer requests for which the response's HTTP status code was 5xx. In these cases, the origin server did not satisfy the requests. For example, a status code of 503 (Service Unavailable) means that the origin server is currently unavailable. @Statistics@ : The most useful statistic is @Average@ . @Unit@ : The published unit is @Percent@ .
--
-- * 'gdmdStartTime' - The start of the time interval for which to get metric data. Constraints:     * Specified in Coordinated Universal Time (UTC).     * Specified in the Unix time format. For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, specify @1538424000@ as the start time. You can convert a human-friendly time to Unix time format using a converter like <https://www.epochconverter.com/ Epoch converter> .
--
-- * 'gdmdEndTime' - The end of the time interval for which to get metric data. Constraints:     * Specified in Coordinated Universal Time (UTC).     * Specified in the Unix time format. For example, if you wish to use an end time of October 1, 2018, at 9 PM UTC, specify @1538427600@ as the end time. You can convert a human-friendly time to Unix time format using a converter like <https://www.epochconverter.com/ Epoch converter> .
--
-- * 'gdmdPeriod' - The granularity, in seconds, for the metric data points that will be returned.
--
-- * 'gdmdUnit' - The unit for the metric data request. Valid units depend on the metric data being requested. For the valid units with each available metric, see the @metricName@ parameter.
--
-- * 'gdmdStatistics' - The statistic for the metric. The following statistics are available:     * @Minimum@ - The lowest value observed during the specified period. Use this value to determine low volumes of activity for your application.     * @Maximum@ - The highest value observed during the specified period. Use this value to determine high volumes of activity for your application.     * @Sum@ - All values submitted for the matching metric added together. You can use this statistic to determine the total volume of a metric.     * @Average@ - The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum values, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum values. This comparison helps you to know when to increase or decrease your resources.     * @SampleCount@ - The count, or number, of data points used for the statistical calculation.
getDistributionMetricData ::
  -- | 'gdmdDistributionName'
  Text ->
  -- | 'gdmdMetricName'
  DistributionMetricName ->
  -- | 'gdmdStartTime'
  UTCTime ->
  -- | 'gdmdEndTime'
  UTCTime ->
  -- | 'gdmdPeriod'
  Natural ->
  -- | 'gdmdUnit'
  MetricUnit ->
  GetDistributionMetricData
getDistributionMetricData
  pDistributionName_
  pMetricName_
  pStartTime_
  pEndTime_
  pPeriod_
  pUnit_ =
    GetDistributionMetricData'
      { _gdmdDistributionName =
          pDistributionName_,
        _gdmdMetricName = pMetricName_,
        _gdmdStartTime = _Time # pStartTime_,
        _gdmdEndTime = _Time # pEndTime_,
        _gdmdPeriod = _Nat # pPeriod_,
        _gdmdUnit = pUnit_,
        _gdmdStatistics = mempty
      }

-- | The name of the distribution for which to get metric data. Use the @GetDistributions@ action to get a list of distribution names that you can specify.
gdmdDistributionName :: Lens' GetDistributionMetricData Text
gdmdDistributionName = lens _gdmdDistributionName (\s a -> s {_gdmdDistributionName = a})

-- | The metric for which you want to return information. Valid distribution metric names are listed below, along with the most useful @statistics@ to include in your request, and the published @unit@ value.     * __@Requests@ __ - The total number of viewer requests received by your Lightsail distribution, for all HTTP methods, and for both HTTP and HTTPS requests. @Statistics@ : The most useful statistic is @Sum@ . @Unit@ : The published unit is @None@ .     * __@BytesDownloaded@ __ - The number of bytes downloaded by viewers for GET, HEAD, and OPTIONS requests. @Statistics@ : The most useful statistic is @Sum@ . @Unit@ : The published unit is @None@ .     * __@BytesUploaded @ __ - The number of bytes uploaded to your origin by your Lightsail distribution, using POST and PUT requests. @Statistics@ : The most useful statistic is @Sum@ . @Unit@ : The published unit is @None@ .     * __@TotalErrorRate@ __ - The percentage of all viewer requests for which the response's HTTP status code was 4xx or 5xx. @Statistics@ : The most useful statistic is @Average@ . @Unit@ : The published unit is @Percent@ .     * __@4xxErrorRate@ __ - The percentage of all viewer requests for which the response's HTTP status cod was 4xx. In these cases, the client or client viewer may have made an error. For example, a status code of 404 (Not Found) means that the client requested an object that could not be found. @Statistics@ : The most useful statistic is @Average@ . @Unit@ : The published unit is @Percent@ .     * __@5xxErrorRate@ __ - The percentage of all viewer requests for which the response's HTTP status code was 5xx. In these cases, the origin server did not satisfy the requests. For example, a status code of 503 (Service Unavailable) means that the origin server is currently unavailable. @Statistics@ : The most useful statistic is @Average@ . @Unit@ : The published unit is @Percent@ .
gdmdMetricName :: Lens' GetDistributionMetricData DistributionMetricName
gdmdMetricName = lens _gdmdMetricName (\s a -> s {_gdmdMetricName = a})

-- | The start of the time interval for which to get metric data. Constraints:     * Specified in Coordinated Universal Time (UTC).     * Specified in the Unix time format. For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, specify @1538424000@ as the start time. You can convert a human-friendly time to Unix time format using a converter like <https://www.epochconverter.com/ Epoch converter> .
gdmdStartTime :: Lens' GetDistributionMetricData UTCTime
gdmdStartTime = lens _gdmdStartTime (\s a -> s {_gdmdStartTime = a}) . _Time

-- | The end of the time interval for which to get metric data. Constraints:     * Specified in Coordinated Universal Time (UTC).     * Specified in the Unix time format. For example, if you wish to use an end time of October 1, 2018, at 9 PM UTC, specify @1538427600@ as the end time. You can convert a human-friendly time to Unix time format using a converter like <https://www.epochconverter.com/ Epoch converter> .
gdmdEndTime :: Lens' GetDistributionMetricData UTCTime
gdmdEndTime = lens _gdmdEndTime (\s a -> s {_gdmdEndTime = a}) . _Time

-- | The granularity, in seconds, for the metric data points that will be returned.
gdmdPeriod :: Lens' GetDistributionMetricData Natural
gdmdPeriod = lens _gdmdPeriod (\s a -> s {_gdmdPeriod = a}) . _Nat

-- | The unit for the metric data request. Valid units depend on the metric data being requested. For the valid units with each available metric, see the @metricName@ parameter.
gdmdUnit :: Lens' GetDistributionMetricData MetricUnit
gdmdUnit = lens _gdmdUnit (\s a -> s {_gdmdUnit = a})

-- | The statistic for the metric. The following statistics are available:     * @Minimum@ - The lowest value observed during the specified period. Use this value to determine low volumes of activity for your application.     * @Maximum@ - The highest value observed during the specified period. Use this value to determine high volumes of activity for your application.     * @Sum@ - All values submitted for the matching metric added together. You can use this statistic to determine the total volume of a metric.     * @Average@ - The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum values, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum values. This comparison helps you to know when to increase or decrease your resources.     * @SampleCount@ - The count, or number, of data points used for the statistical calculation.
gdmdStatistics :: Lens' GetDistributionMetricData [MetricStatistic]
gdmdStatistics = lens _gdmdStatistics (\s a -> s {_gdmdStatistics = a}) . _Coerce

instance AWSRequest GetDistributionMetricData where
  type
    Rs GetDistributionMetricData =
      GetDistributionMetricDataResponse
  request = postJSON lightsail
  response =
    receiveJSON
      ( \s h x ->
          GetDistributionMetricDataResponse'
            <$> (x .?> "metricName")
            <*> (x .?> "metricData" .!@ mempty)
            <*> (pure (fromEnum s))
      )

instance Hashable GetDistributionMetricData

instance NFData GetDistributionMetricData

instance ToHeaders GetDistributionMetricData where
  toHeaders =
    const
      ( mconcat
          [ "X-Amz-Target"
              =# ("Lightsail_20161128.GetDistributionMetricData" :: ByteString),
            "Content-Type" =# ("application/x-amz-json-1.1" :: ByteString)
          ]
      )

instance ToJSON GetDistributionMetricData where
  toJSON GetDistributionMetricData' {..} =
    object
      ( catMaybes
          [ Just ("distributionName" .= _gdmdDistributionName),
            Just ("metricName" .= _gdmdMetricName),
            Just ("startTime" .= _gdmdStartTime),
            Just ("endTime" .= _gdmdEndTime),
            Just ("period" .= _gdmdPeriod),
            Just ("unit" .= _gdmdUnit),
            Just ("statistics" .= _gdmdStatistics)
          ]
      )

instance ToPath GetDistributionMetricData where
  toPath = const "/"

instance ToQuery GetDistributionMetricData where
  toQuery = const mempty

-- | /See:/ 'getDistributionMetricDataResponse' smart constructor.
data GetDistributionMetricDataResponse = GetDistributionMetricDataResponse'
  { _gdmdrsMetricName ::
      !( Maybe
           DistributionMetricName
       ),
    _gdmdrsMetricData ::
      !( Maybe
           [MetricDatapoint]
       ),
    _gdmdrsResponseStatus ::
      !Int
  }
  deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'GetDistributionMetricDataResponse' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'gdmdrsMetricName' - The name of the metric returned.
--
-- * 'gdmdrsMetricData' - An array of objects that describe the metric data returned.
--
-- * 'gdmdrsResponseStatus' - -- | The response status code.
getDistributionMetricDataResponse ::
  -- | 'gdmdrsResponseStatus'
  Int ->
  GetDistributionMetricDataResponse
getDistributionMetricDataResponse pResponseStatus_ =
  GetDistributionMetricDataResponse'
    { _gdmdrsMetricName = Nothing,
      _gdmdrsMetricData = Nothing,
      _gdmdrsResponseStatus = pResponseStatus_
    }

-- | The name of the metric returned.
gdmdrsMetricName :: Lens' GetDistributionMetricDataResponse (Maybe DistributionMetricName)
gdmdrsMetricName = lens _gdmdrsMetricName (\s a -> s {_gdmdrsMetricName = a})

-- | An array of objects that describe the metric data returned.
gdmdrsMetricData :: Lens' GetDistributionMetricDataResponse [MetricDatapoint]
gdmdrsMetricData = lens _gdmdrsMetricData (\s a -> s {_gdmdrsMetricData = a}) . _Default . _Coerce

-- | -- | The response status code.
gdmdrsResponseStatus :: Lens' GetDistributionMetricDataResponse Int
gdmdrsResponseStatus = lens _gdmdrsResponseStatus (\s a -> s {_gdmdrsResponseStatus = a})

instance NFData GetDistributionMetricDataResponse
